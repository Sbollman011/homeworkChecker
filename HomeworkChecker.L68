00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/28/2020 7:32:09 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :HomeworckChecker
00000000                             3  * Written by :Steven & Friends
00000000                             4  * Date       :10/25/2020
00000000                             5  * Description: A program to perform an operation on hex values given by user.
00000000                             6  * The programs returns the new hex number after the operation as well as any flags
00000000                             7  * That were set off
00000000                             8  *
00000000                             9  * ##!!MESSAGES IN CAPS ARE IMPORTANT!!!!!!!!!!#####
00000000                            10  *
00000000                            11  * Currently, initial hex data and the operation are hard coded. Extended is just connected
00000000                            12  * to carry.... needs fixing
00000000                            13  
00000000                            14  * ##!!!TO USE: Hardcode your hex value into data, and hardcode the operation
00000000                            15  * in the 4 spots under labels, OVFL,CAR,NEG,ZER
00000000                            16  *-----------------------------------------------------------
00000000                            17      
00000000  =0000000D                 18  CR       EQU     $0D            *Carriage return
00000000  =0000000A                 19  LF       EQU     $0A            *Line feed
00000000  =3456ABCF                 20  data     EQU     $3456ABCF      * !!!PUT YOUR HEXDECIMAL VALUE HERE !!!!
00000000                            21  
00000000                            22  
00001000                            23           ORG    $1000
00001000                            24  START:                 
00001000                            25  LOOP
00001000  43F9 000010CA             26      LEA         GREET,A1        *Loads greeting message CANNOT ENTER INPUT ATM MUST HARDCODE
00001006  103C 000E                 27      MOVE.B      #14,D0
0000100A  4E4F                      28      TRAP        #15
0000100C  363C 0000                 29      MOVE        #0,D3           *Move 0 into D3 for a FOR loop
00001010                            30      
00001010                            31      
00001010                            32  INLOOP
00001010  5243                      33      ADD.W       #1,D3
00001012  B67C 0008                 34      CMP.W       #8,D3
00001016  6E00 000E                 35      BGT         COMP
0000101A  103C 0005                 36      MOVE.B      #5,D0         *Move 4 to data register 0 for trap task
0000101E  4E4F                      37      TRAP        #15             *Trap task reads from input and puts input data into D1.L
00001020  2801                      38      MOVE.L      D1,D4
00001022  E304                      39      ASL.B       #1,D4       
00001024  60EA                      40      BRA         INLOOP
00001026                            41      
00001026                            42      
00001026                            43  *-----Conversion Methods-------
00001026                            44  ASC2HEX
00001026                            45      
00001026                            46      
00001026                            47  
00001026                            48  ALPHA
00001026                            49  
00001026                            50  ERROR
00001026                            51  *----Computations----
00001026                            52  COMP
00001026  43F9 00001108             53      LEA         GREET2,A1       *Loads second greeting message/rules/Notes
0000102C  103C 000E                 54      MOVE.B      #14,D0
00001030  4E4F                      55      TRAP        #15
00001032                            56      
00001032                            57  
00001032                            58  OVFL
00001032  44FC 0000                 59      MOVE        #$00,CCR
00001036  223C 3456ABCF             60      MOVE.L      #data,D1        *Moves data(your hex value) into D1 for trap task
0000103C  E640                      61       ASR.W #3,D0         *##!!!HARDCODE YOUR OPERATION HERE!!!!!CHANGE TO D1!!! performs your operation!!!!!!###
0000103E  6900 005A                 62      BVS         OVER            *Branches if overflow flag is set   
00001042                            63      
00001042                            64      
00001042                            65  CAR
00001042  44FC 0000                 66      MOVE        #$00,CCR
00001046  223C 3456ABCF             67      MOVE.L      #data,D1         
0000104C  E640                      68       ASR.W #3,D0          *##!!!HARDCODE YOUR OPERATION HERE!!!!CHANGE TO D1!!! performs your operation!!!!!!###
0000104E  6500 003C                 69      BCS         CARRY           *Branches if carry flag is set
00001052                            70      
00001052                            71      
00001052                            72  NEG
00001052  44FC 0000                 73      MOVE        #$00,CCR
00001056  223C 3456ABCF             74      MOVE.L      #data,D1         
0000105C  E640                      75       ASR.W #3,D0           *##!!!HARDCODE YOUR OPERATION HERE!!!!CHANGE TO D1!!! performs your operation!!!!!!###
0000105E  B2BC 00000000             76      CMP.L       #0,D1
00001064  6D00 0042                 77      BLT         NEGA            *Branches if negative flag is set
00001068                            78       
00001068                            79      
00001068                            80  ZER 
00001068  44FC 0000                 81      MOVE        #$00,CCR
0000106C  223C 3456ABCF             82      MOVE.L      #data,D1
00001072  E640                      83       ASR.W #3,D0       *##!!!HARDCODE YOUR OPERATION HERE!!!!CHANGE TO D1!!! performs your operation!!!!!!###
00001074  B2BC 00000000             84      CMP.L       #0,D1  
0000107A  6700 003A                 85      BEQ         ZERO           *Branches if Zerp flag is set
0000107E                            86      
0000107E                            87      
0000107E                            88  RESULT  
0000107E                            89                                    *returns number stored in D1, should be hex result.
0000107E  103C 000F                 90      MOVE.B      #15,D0     
00001082  143C 0010                 91      MOVE.B      #16,D2
00001086  4E4F                      92      TRAP        #15
00001088  6000 003A                 93      BRA         DONE
0000108C                            94  
0000108C                            95  
0000108C                            96  *-------MESSAGES---------------
0000108C                            97  
0000108C                            98  CARRY                        *Displays message if carry flag is set, branches back to NEG to continue
0000108C  43F9 00001141             99      LEA         CAROUT,A1           
00001092  103C 000E                100      MOVE.B      #14,D0
00001096  4E4F                     101      TRAP        #15
00001098  60B8                     102      BRA         NEG
0000109A                           103      
0000109A                           104         
0000109A                           105  OVER                         *Displays message if overflow flag is set, branches back to NEG to continue
0000109A  43F9 0000116F            106      LEA         OVROUT,A1
000010A0  103C 000E                107      MOVE.B      #14,D0
000010A4  4E4F                     108      TRAP        #15
000010A6  609A                     109      BRA         CAR
000010A8                           110      
000010A8                           111  
000010A8                           112  NEGA                         *Displays message if negative flag is set, branches back to NEG to continue
000010A8  43F9 0000118B            113      LEA         NEGOUT,A1
000010AE  103C 000E                114      MOVE.B      #14,D0
000010B2  4E4F                     115      TRAP        #15
000010B4  60B2                     116      BRA         ZER
000010B6                           117      
000010B6                           118      
000010B6                           119  ZERO                         *Displays message if zero flag is set, branches back to NEG to continue
000010B6  43F9 000011A4            120      LEA         ZEROUT,A1
000010BC  103C 000E                121      MOVE.B      #14,D0
000010C0  4E4F                     122      TRAP        #15
000010C2  60BA                     123      BRA         RESULT
000010C4                           124      
000010C4                           125      
000010C4                           126  DONE
000010C4  103C 0009                127       MOVE.B     #9,D0
000010C8  4E4F                     128       TRAP       #15                 Halt Simulator
000010CA                           129  
000010CA                           130     
000010CA                           131  
000010CA= 0D 0A 45 6E 74 65 ...    132  GREET     DC.B    CR,LF,'Enter your hex value to perform Operation and Flag Check.',CR,LF,0 
00001108= 0D 0A 2A 30 30 30 ...    133  GREET2    DC.B    CR,LF,'*000XNZVC* ROL operation ignores X and V is always 0',CR,LF,0 
00001141= 0D 0A 43 41 52 52 ...    134  CAROUT    DC.B    CR,LF,'CARRY FLAG SET (C). EXTENDED FLAG SET (X)',CR,LF,0 
0000116F= 0A 0D 0A 4F 56 45 ...    135  OVROUT    DC.B    LF,CR,LF,'OVERFLOW FLAG SET (V).',CR,LF,0
0000118B= 4E 45 47 41 54 49 ...    136  NEGOUT    DC.B    'NEGATIVE FLAG SET (N).',CR,LF,0
000011A4= 5A 45 52 4F 20 46 ...    137  ZEROUT    DC.B    'ZERO FLAG SET (Z).',CR,LF,CR,LF,0
000011BB                           138  
000011BB                           139  
000011BB                           140  
000011BB                           141  
000011BB                           142      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ALPHA               1026
ASC2HEX             1026
CAR                 1042
CAROUT              1141
CARRY               108C
COMP                1026
CR                  D
DATA                3456ABCF
DONE                10C4
ERROR               1026
GREET               10CA
GREET2              1108
INLOOP              1010
LF                  A
LOOP                1000
NEG                 1052
NEGA                10A8
NEGOUT              118B
OVER                109A
OVFL                1032
OVROUT              116F
RESULT              107E
START               1000
ZER                 1068
ZERO                10B6
ZEROUT              11A4
